// Code generated by protoc-gen-go. DO NOT EDIT.
// source: twophase.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TwoPhaseRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operation            string   `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwoPhaseRequest) Reset()         { *m = TwoPhaseRequest{} }
func (m *TwoPhaseRequest) String() string { return proto.CompactTextString(m) }
func (*TwoPhaseRequest) ProtoMessage()    {}
func (*TwoPhaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d55f542a6cbabd5f, []int{0}
}

func (m *TwoPhaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwoPhaseRequest.Unmarshal(m, b)
}
func (m *TwoPhaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwoPhaseRequest.Marshal(b, m, deterministic)
}
func (m *TwoPhaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwoPhaseRequest.Merge(m, src)
}
func (m *TwoPhaseRequest) XXX_Size() int {
	return xxx_messageInfo_TwoPhaseRequest.Size(m)
}
func (m *TwoPhaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TwoPhaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TwoPhaseRequest proto.InternalMessageInfo

func (m *TwoPhaseRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TwoPhaseRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TwoPhaseRequest) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type TwoPhaseResponse struct {
	OperationResponseCode    int32    `protobuf:"varint,3,opt,name=OperationResponseCode,proto3" json:"OperationResponseCode,omitempty"`
	OperationResponseMessage string   `protobuf:"bytes,4,opt,name=OperationResponseMessage,proto3" json:"OperationResponseMessage,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TwoPhaseResponse) Reset()         { *m = TwoPhaseResponse{} }
func (m *TwoPhaseResponse) String() string { return proto.CompactTextString(m) }
func (*TwoPhaseResponse) ProtoMessage()    {}
func (*TwoPhaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d55f542a6cbabd5f, []int{1}
}

func (m *TwoPhaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwoPhaseResponse.Unmarshal(m, b)
}
func (m *TwoPhaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwoPhaseResponse.Marshal(b, m, deterministic)
}
func (m *TwoPhaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwoPhaseResponse.Merge(m, src)
}
func (m *TwoPhaseResponse) XXX_Size() int {
	return xxx_messageInfo_TwoPhaseResponse.Size(m)
}
func (m *TwoPhaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TwoPhaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TwoPhaseResponse proto.InternalMessageInfo

func (m *TwoPhaseResponse) GetOperationResponseCode() int32 {
	if m != nil {
		return m.OperationResponseCode
	}
	return 0
}

func (m *TwoPhaseResponse) GetOperationResponseMessage() string {
	if m != nil {
		return m.OperationResponseMessage
	}
	return ""
}

type EmptyTwoPhase struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyTwoPhase) Reset()         { *m = EmptyTwoPhase{} }
func (m *EmptyTwoPhase) String() string { return proto.CompactTextString(m) }
func (*EmptyTwoPhase) ProtoMessage()    {}
func (*EmptyTwoPhase) Descriptor() ([]byte, []int) {
	return fileDescriptor_d55f542a6cbabd5f, []int{2}
}

func (m *EmptyTwoPhase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyTwoPhase.Unmarshal(m, b)
}
func (m *EmptyTwoPhase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyTwoPhase.Marshal(b, m, deterministic)
}
func (m *EmptyTwoPhase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyTwoPhase.Merge(m, src)
}
func (m *EmptyTwoPhase) XXX_Size() int {
	return xxx_messageInfo_EmptyTwoPhase.Size(m)
}
func (m *EmptyTwoPhase) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyTwoPhase.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyTwoPhase proto.InternalMessageInfo

type JoinConnectionRequest struct {
	PortNumber           int64    `protobuf:"varint,1,opt,name=portNumber,proto3" json:"portNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinConnectionRequest) Reset()         { *m = JoinConnectionRequest{} }
func (m *JoinConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*JoinConnectionRequest) ProtoMessage()    {}
func (*JoinConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d55f542a6cbabd5f, []int{3}
}

func (m *JoinConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinConnectionRequest.Unmarshal(m, b)
}
func (m *JoinConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinConnectionRequest.Marshal(b, m, deterministic)
}
func (m *JoinConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinConnectionRequest.Merge(m, src)
}
func (m *JoinConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_JoinConnectionRequest.Size(m)
}
func (m *JoinConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinConnectionRequest proto.InternalMessageInfo

func (m *JoinConnectionRequest) GetPortNumber() int64 {
	if m != nil {
		return m.PortNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*TwoPhaseRequest)(nil), "proto.TwoPhaseRequest")
	proto.RegisterType((*TwoPhaseResponse)(nil), "proto.TwoPhaseResponse")
	proto.RegisterType((*EmptyTwoPhase)(nil), "proto.EmptyTwoPhase")
	proto.RegisterType((*JoinConnectionRequest)(nil), "proto.JoinConnectionRequest")
}

func init() {
	proto.RegisterFile("twophase.proto", fileDescriptor_d55f542a6cbabd5f)
}

var fileDescriptor_d55f542a6cbabd5f = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x1b, 0x63, 0x84, 0x0e, 0xd8, 0x96, 0xa1, 0xd5, 0xa5, 0x14, 0x91, 0x9c, 0x3c, 0xf5,
	0xa0, 0x82, 0xe0, 0xb5, 0xe8, 0x41, 0xa8, 0x96, 0x28, 0x78, 0x4e, 0xe3, 0xa0, 0xab, 0xed, 0xce,
	0x9a, 0xdd, 0xb4, 0xf4, 0xee, 0x8f, 0xf1, 0x67, 0x4a, 0x76, 0x1b, 0x62, 0x6d, 0x3d, 0x25, 0xfb,
	0xbe, 0x99, 0xdd, 0xf7, 0x1e, 0xb4, 0xec, 0x92, 0xf5, 0x5b, 0x6a, 0x68, 0xa8, 0x73, 0xb6, 0x8c,
	0x91, 0xfb, 0xc4, 0xcf, 0xd0, 0x7e, 0x5a, 0xf2, 0xa4, 0x04, 0x09, 0x7d, 0x16, 0x64, 0x2c, 0x76,
	0x20, 0xfc, 0xa0, 0x95, 0x08, 0x4e, 0x83, 0xb3, 0x66, 0x52, 0xfe, 0x62, 0x17, 0xa2, 0x45, 0x3a,
	0x2b, 0x48, 0xec, 0x39, 0xcd, 0x1f, 0x70, 0x00, 0x4d, 0xd6, 0x94, 0xa7, 0x56, 0xb2, 0x12, 0xa1,
	0x23, 0xb5, 0x10, 0x7f, 0x05, 0xd0, 0xa9, 0x6f, 0x36, 0x9a, 0x95, 0x21, 0xbc, 0x84, 0xde, 0x43,
	0x35, 0x51, 0x89, 0x23, 0x7e, 0x21, 0xb7, 0x1e, 0x25, 0xbb, 0x21, 0x5e, 0x83, 0xd8, 0x02, 0x63,
	0x32, 0x26, 0x7d, 0x25, 0xb1, 0xef, 0xde, 0xfd, 0x97, 0xc7, 0x6d, 0x38, 0xbc, 0x99, 0x6b, 0xbb,
	0xaa, 0xac, 0xc4, 0x57, 0xd0, 0xbb, 0x63, 0xa9, 0x46, 0xac, 0x14, 0x65, 0x7e, 0xc3, 0xc7, 0x3e,
	0x01, 0xd0, 0x9c, 0xdb, 0xfb, 0x62, 0x3e, 0xa5, 0xdc, 0xa5, 0x0f, 0x93, 0x5f, 0xca, 0xf9, 0x77,
	0x50, 0x57, 0xf5, 0x48, 0xf9, 0x42, 0x66, 0x84, 0x63, 0x10, 0x52, 0x49, 0x2b, 0x53, 0x4b, 0x15,
	0x9a, 0x94, 0xb5, 0x66, 0x3c, 0xc3, 0x23, 0x5f, 0xf4, 0xf0, 0x4f, 0xbd, 0xfd, 0xe3, 0x2d, 0xdd,
	0x3b, 0x8e, 0x1b, 0x78, 0x0b, 0xad, 0xf7, 0x0d, 0x6f, 0x38, 0x58, 0x0f, 0xef, 0xb4, 0xdc, 0xef,
	0xae, 0xe9, 0x66, 0xc2, 0xc6, 0xf4, 0xc0, 0xc9, 0x17, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x31,
	0x7a, 0x41, 0x4a, 0xf4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TwoPhaseServiceClient is the client API for TwoPhaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TwoPhaseServiceClient interface {
	InitiateTwoPhaseProtocol(ctx context.Context, in *TwoPhaseRequest, opts ...grpc.CallOption) (*TwoPhaseResponse, error)
	JoinConnection(ctx context.Context, in *JoinConnectionRequest, opts ...grpc.CallOption) (*EmptyTwoPhase, error)
}

type twoPhaseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTwoPhaseServiceClient(cc grpc.ClientConnInterface) TwoPhaseServiceClient {
	return &twoPhaseServiceClient{cc}
}

func (c *twoPhaseServiceClient) InitiateTwoPhaseProtocol(ctx context.Context, in *TwoPhaseRequest, opts ...grpc.CallOption) (*TwoPhaseResponse, error) {
	out := new(TwoPhaseResponse)
	err := c.cc.Invoke(ctx, "/proto.TwoPhaseService/initiateTwoPhaseProtocol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twoPhaseServiceClient) JoinConnection(ctx context.Context, in *JoinConnectionRequest, opts ...grpc.CallOption) (*EmptyTwoPhase, error) {
	out := new(EmptyTwoPhase)
	err := c.cc.Invoke(ctx, "/proto.TwoPhaseService/joinConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TwoPhaseServiceServer is the server API for TwoPhaseService service.
type TwoPhaseServiceServer interface {
	InitiateTwoPhaseProtocol(context.Context, *TwoPhaseRequest) (*TwoPhaseResponse, error)
	JoinConnection(context.Context, *JoinConnectionRequest) (*EmptyTwoPhase, error)
}

// UnimplementedTwoPhaseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTwoPhaseServiceServer struct {
}

func (*UnimplementedTwoPhaseServiceServer) InitiateTwoPhaseProtocol(ctx context.Context, req *TwoPhaseRequest) (*TwoPhaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitiateTwoPhaseProtocol not implemented")
}
func (*UnimplementedTwoPhaseServiceServer) JoinConnection(ctx context.Context, req *JoinConnectionRequest) (*EmptyTwoPhase, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinConnection not implemented")
}

func RegisterTwoPhaseServiceServer(s *grpc.Server, srv TwoPhaseServiceServer) {
	s.RegisterService(&_TwoPhaseService_serviceDesc, srv)
}

func _TwoPhaseService_InitiateTwoPhaseProtocol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TwoPhaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwoPhaseServiceServer).InitiateTwoPhaseProtocol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TwoPhaseService/InitiateTwoPhaseProtocol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwoPhaseServiceServer).InitiateTwoPhaseProtocol(ctx, req.(*TwoPhaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwoPhaseService_JoinConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwoPhaseServiceServer).JoinConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TwoPhaseService/JoinConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwoPhaseServiceServer).JoinConnection(ctx, req.(*JoinConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TwoPhaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TwoPhaseService",
	HandlerType: (*TwoPhaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "initiateTwoPhaseProtocol",
			Handler:    _TwoPhaseService_InitiateTwoPhaseProtocol_Handler,
		},
		{
			MethodName: "joinConnection",
			Handler:    _TwoPhaseService_JoinConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "twophase.proto",
}
